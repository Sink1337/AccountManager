buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "https://maven.minecraftforge.net/"
        }
        maven {
            name = "jitpack"
            url = "https://jitpack.io/"
        }
    }
    dependencies {
        classpath "com.github.asbyth:ForgeGradle:6f53277"
    }
}

apply plugin: "net.minecraftforge.gradle.forge"

version = modVersion
group = modGroup
archivesBaseName = modBaseName

sourceCompatibility = targetCompatibility = 1.8
compileJava.options.encoding = "UTF-8"

minecraft {
    version = project.forgeVersion
    runDir = "run"
    mappings = project.mcpVersion
    makeObfSourceJar = false
}

dependencies {
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"
      
    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // the 'provided' configuration is for optional dependencies that exist at compile-time but might not at runtime.
    //provided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // the deobf configurations:  'deobfCompile' and 'deobfProvided' are the same as the normal compile and provided,
    // except that these dependencies get remapped to your current MCP mappings
    //deobfCompile 'com.mod-buildcraft:buildcraft:6.0.8:dev'
    //deobfProvided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include "mcmod.info"
        expand "version": project.version, "mcversion": project.minecraft.version
    }
        
    from(sourceSets.main.resources.srcDirs) {
        exclude "mcmod.info"
    }
}